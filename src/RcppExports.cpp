// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// createPRNG_
void createPRNG_(Rcpp::List cfg);
RcppExport SEXP _qiprng_createPRNG_(SEXP cfgSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type cfg(cfgSEXP);
    createPRNG_(cfg);
    return R_NilValue;
END_RCPP
}
// updatePRNG_
void updatePRNG_(Rcpp::List cfg);
RcppExport SEXP _qiprng_updatePRNG_(SEXP cfgSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type cfg(cfgSEXP);
    updatePRNG_(cfg);
    return R_NilValue;
END_RCPP
}
// getPRNGConfig_
Rcpp::List getPRNGConfig_();
RcppExport SEXP _qiprng_getPRNGConfig_() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getPRNGConfig_());
    return rcpp_result_gen;
END_RCPP
}
// generatePRNG_
Rcpp::NumericVector generatePRNG_(int n);
RcppExport SEXP _qiprng_generatePRNG_(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(generatePRNG_(n));
    return rcpp_result_gen;
END_RCPP
}
// reseedPRNG_
void reseedPRNG_();
RcppExport SEXP _qiprng_reseedPRNG_() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    reseedPRNG_();
    return R_NilValue;
END_RCPP
}
// cleanup_prng_
void cleanup_prng_();
RcppExport SEXP _qiprng_cleanup_prng_() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    cleanup_prng_();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qiprng_createPRNG_", (DL_FUNC) &_qiprng_createPRNG_, 1},
    {"_qiprng_updatePRNG_", (DL_FUNC) &_qiprng_updatePRNG_, 1},
    {"_qiprng_getPRNGConfig_", (DL_FUNC) &_qiprng_getPRNGConfig_, 0},
    {"_qiprng_generatePRNG_", (DL_FUNC) &_qiprng_generatePRNG_, 1},
    {"_qiprng_reseedPRNG_", (DL_FUNC) &_qiprng_reseedPRNG_, 0},
    {"_qiprng_cleanup_prng_", (DL_FUNC) &_qiprng_cleanup_prng_, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_qiprng(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
