% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prng_interface.R
\name{createPRNG}
\alias{createPRNG}
\title{Create a new PRNG instance}
\usage{
createPRNG(config = default_config)
}
\arguments{
\item{config}{List of configuration parameters. Default values are provided by \code{default_config}.
Possible parameters include:
\describe{
\item{a, b, c}{Integer parameters for the quadratic equation (ax² + bx + c). Must satisfy b² - 4ac > 0}
\item{mpfr_precision}{Integer precision in bits for MPFR computations (24-10000)}
\item{buffer_size}{Integer size of the buffer for random numbers}
\item{distribution}{String specifying the distribution: "uniform_01", "uniform_range", "normal", "exponential", "poisson", "gamma", or "beta"}
\item{range_min, range_max}{Numeric bounds for uniform_range distribution}
\item{normal_mean, normal_sd}{Parameters for normal distribution}
\item{exponential_lambda}{Rate parameter for exponential distribution}
\item{poisson_lambda}{Rate parameter for Poisson distribution}
\item{gamma_shape, gamma_scale}{Parameters for gamma distribution}
\item{beta_alpha, beta_beta}{Parameters for beta distribution}
\item{use_crypto_mixing}{Logical: whether to apply cryptographic mixing}
\item{reseed_interval}{Integer: number of iterations between automatic reseeds}
\item{use_threading}{Logical: whether to enable thread-local PRNG instances}
\item{use_csv_discriminants}{Logical: whether to use custom discriminants from discriminants.csv}
\item{use_excellent_only}{Logical: whether to restrict to excellent discriminants (max_abs_acf <= 0.010)}
\item{quality_threshold}{Numeric: maximum autocorrelation threshold for discriminant selection}
\item{use_parallel_filling}{Logical: whether to use parallel buffer filling}
\item{mixing_strategy}{String: entropy mixing strategy for multi-QI ensemble (v0.5.0).
Options: "round_robin" (default), "xor_mix", "averaging", "modular_add", "cascade_mix"}
\item{debug}{Logical: whether to enable debugging output}
\item{seed}{Numeric seed for reproducible sequences (0 to 2^53-1).
When provided, all random initialization is replaced with
deterministic seeding. Default NULL uses secure random initialization.}
}}
}
\value{
Invisibly returns NULL
}
\description{
Creates a new global PRNG instance with the specified configuration. This function
initializes a new pseudo-random number generator based on quadratic irrationals with
configurable parameters.
}
\details{
Thread safety information: This package uses a global PRNG instance that is protected by a mutex.
While comprehensive thread safety is provided through mutex protection and thread-local storage,
for heavy parallel workloads it is recommended to set \code{use_threading=TRUE} in the configuration.
}
\examples{
# Create PRNG with default settings
createPRNG()

# Create PRNG with custom configuration
createPRNG(list(
  a = 3L,
  b = 7L, 
  c = -5L,
  distribution = "normal",
  normal_mean = 10,
  normal_sd = 2,
  use_threading = TRUE
))

# Create PRNG with seed for reproducible sequences
createPRNG(list(seed = 12345))
seq1 <- generatePRNG(10)

# Same seed produces same sequence
cleanup_prng()
createPRNG(list(seed = 12345))
seq2 <- generatePRNG(10)
identical(seq1, seq2)  # TRUE
}
