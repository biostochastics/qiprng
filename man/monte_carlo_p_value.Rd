% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_framework.R
\name{monte_carlo_p_value}
\alias{monte_carlo_p_value}
\title{Monte Carlo p-value calculation}
\usage{
monte_carlo_p_value(
  observed_stat,
  null_simulator,
  test_statistic,
  n_simulations = 10000,
  alternative = "two.sided",
  progress = TRUE,
  seed = NULL,
  ...
)
}
\arguments{
\item{observed_stat}{The observed test statistic}

\item{null_simulator}{Function that generates data under null hypothesis}

\item{test_statistic}{Function that computes test statistic from simulated data}

\item{n_simulations}{Number of Monte Carlo simulations (default: 10000)}

\item{alternative}{Character string specifying the alternative hypothesis}

\item{progress}{Logical; show progress bar (default: TRUE)}

\item{seed}{Random seed for reproducibility (default: NULL)}

\item{...}{Additional arguments passed to null_simulator}
}
\value{
A list containing:
\item{p.value}{The Monte Carlo p-value}
\item{simulated_stats}{Vector of simulated test statistics}
\item{observed_stat}{The observed test statistic}
\item{n_simulations}{Number of simulations used}
}
\description{
Estimates p-values by simulating the null distribution of a test statistic
using Monte Carlo methods. This is useful when the null distribution can
be simulated but not analytically derived.
}
\examples{
\dontrun{
# Test for correlation
observed_cor <- cor(x, y)
null_sim <- function(n) {
  list(x = rnorm(n), y = rnorm(n))
}
stat_func <- function(data) cor(data$x, data$y)
result <- monte_carlo_p_value(observed_cor, null_sim, stat_func, n = 100)
}

}
